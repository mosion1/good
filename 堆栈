#include <stdio.h>
#include <stdlib.h>
#define max 100
typedef int DataType;

//定义顺序堆栈
typedef struct seqstack {
	DataType data[max];
	int top;
}seqstack;
//初始化
void seqstackinitiate(seqstack* s) {
	s->top = -1;
}
//判空
int seqstacknotempty(seqstack s) {
	if (s.top == -1)
		return 1;
	else return 0;
}
//入栈
int seqstackpush(seqstack* s, DataType x) {
	if (s->top >= max - 1)
		return 0;
	s->top++;
	s->data[s->top] = x;
	return 0;
}
//出栈
int seqstackpop(seqstack* s, DataType* x) {
	if (s->top == -1)
		return 0;
	*x = s->data[s->top];
	s->top--;
	return 1;
}
//输出所有元素
void seqstackget(seqstack s) {
	int i;
	for (i = s.top; i >= 0; i--) {
		printf("%d ", s.data[i]);
	}
	printf("\n");
}
int main() {
	seqstack s;
	seqstackinitiate(&s);
	int i;
	for (i = 0; i < 5; i++) {
		seqstackpush(&s, i);
	}
	seqstackget(s);
	int x;
	for (i = 4; i >= 0; i--) {
		seqstackpop(&s, &x);
		printf("栈顶元素是：%d,剩余元素是： ", x);
		seqstackget(s);	}
}
